package net.Sanix.Expansions.registries;

import net.Sanix.Expansions.SanixExpansions;
import net.Sanix.Expansions.items.*;
import net.Sanix.Expansions.items.glinted.GlintedItem;
import net.Sanix.Expansions.items.runes.*;
import net.minecraft.item.Item;
import net.minecraft.util.Identifier;
import net.minecraft.util.Rarity;
import net.minecraft.util.registry.Registry;

public class ModRunes {
    public static final Item EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item INFERSICO_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item ACCIDENTIUM_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item CRUDEMEDIUM_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item SUPERICIO_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item SUPREVICIO_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item SANISANIUM_EMPTY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES));
    public static final Item SATURATION_RUNE = new SaturationRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MILK_RUNE = new MilkRune();
    public static final Item HERO_OF_THE_VILLAGE_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item AUTOSMELT_RUNE_TIER_1 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item AUTOSMELT_RUNE_TIER_2 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1).rarity(Rarity.EPIC));
    public static final Item SKY_DIAMOND_APPLE_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item ENCHANTED_SKY_DIAMOND_APPLE_RUNE = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1).rarity(Rarity.EPIC));
    public static final Item MYSTICAL_SKY_DIAMOND_APPLE_RUNE = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1).rarity(Rarity.EPIC));
    public static final Item WITHER_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WITHER_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WITHER_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WITHER_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WITHER_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WEAKNESS_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WEAKNESS_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WEAKNESS_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WEAKNESS_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item WEAKNESS_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item SLOWNESS_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); //right click for it
    public static final Item SLOWNESS_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); //offhand
    public static final Item SLOWNESS_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); //hotbar
    public static final Item SLOWNESS_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); //inventory
    public static final Item SLOWNESS_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); // inv and echest
    public static final Item POISON_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item POISON_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item POISON_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item POISON_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item POISON_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NAUSEA_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NAUSEA_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NAUSEA_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NAUSEA_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NAUSEA_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MINING_FATIGUE_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MINING_FATIGUE_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MINING_FATIGUE_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MINING_FATIGUE_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MINING_FATIGUE_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item HUNGER_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item HUNGER_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item HUNGER_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item HUNGER_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item HUNGER_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item GLOWING_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item GLOWING_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item GLOWING_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item GLOWING_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item GLOWING_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BLINDNESS_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BLINDNESS_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BLINDNESS_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BLINDNESS_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BLINDNESS_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BAD_OMEN_RUNE_TIER_1 = new EffectRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BAD_OMEN_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BAD_OMEN_RUNE_TIER_3 = new GlintedItem(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BAD_OMEN_RUNE_TIER_4 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item BAD_OMEN_RUNE_TIER_5 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item NETHER_PORTAL_RUNE = new NetherPortalRune();
    public static final Item END_PORTAL_RUNE = new EndPortalRune();
    public static final Item ABSORPTION_RUNE = new AbsorptionRune();
    public static final Item HOME_RUNE = new HomeRune();
    public static final Item CRYSTAL_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item SPONGE_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item CONCRETE_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item ROCKET_RUNE_TIER_1 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item ROCKET_RUNE_TIER_2 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item ROCKET_RUNE_TIER_3 = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item MULTIDIMENSIONAL_RUNE = new MultiDimensionalRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1)); //idk how to change dimensions
    public static final Item INVENTORY_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item LEGACY_COMBAT_RUNE = new Item(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item SCAFFOLD_RUNE = new ScaffoldRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item CRAFTING_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "crafting");
    public static final Item ENDER_CHEST_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "enderchest");
    public static final Item GRINDSTONE_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "grindstone");
    public static final Item LOOM_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "loom");
    public static final Item STONECUTTER_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "stonecutter");
    public static final Item ENCHANTING_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "enchanting");
    public static final Item SMITHING_RUNE = new GUIRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1), "smithing");
    public static final Item SPAWNPOINT_RUNE = new SpawnpointRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item SPAWN_RUNE = new SpawnRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item PHASE_RUNE = new PhaseRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));
    public static final Item TELEPORTATION_RUNE = new TeleportationRune(new Item.Settings().group(ModItemGroups.RUNES).maxCount(1));

    public static void runesinit() {
        registeritem("empty_rune", EMPTY_RUNE);
        registeritem("infersico_empty_rune", INFERSICO_EMPTY_RUNE);
        registeritem("accidentium_empty_rune", ACCIDENTIUM_EMPTY_RUNE);
        registeritem("crudemedium_empty_rune", CRUDEMEDIUM_EMPTY_RUNE);
        registeritem("supericio_empty_rune", SUPERICIO_EMPTY_RUNE);
        registeritem("suprevicio_empty_rune", SUPREVICIO_EMPTY_RUNE);
        registeritem("sanisanium_empty_rune", SANISANIUM_EMPTY_RUNE);
        registeritem("saturation_rune", SATURATION_RUNE);
        registeritem("milk_rune", MILK_RUNE);
        registeritem("autosmelt_rune_tier_1", AUTOSMELT_RUNE_TIER_1);
        registeritem("autosmelt_rune_tier_2", AUTOSMELT_RUNE_TIER_2);
        registeritem("hero_of_the_village_rune", HERO_OF_THE_VILLAGE_RUNE);
        registeritem("sky_diamond_apple_rune", SKY_DIAMOND_APPLE_RUNE);
        registeritem("enchanted_sky_diamond_apple_rune", ENCHANTED_SKY_DIAMOND_APPLE_RUNE);
        registeritem("mystical_sky_diamond_apple_rune", MYSTICAL_SKY_DIAMOND_APPLE_RUNE);
        registeritem("slowness_rune_tier_1", SLOWNESS_RUNE_TIER_1);
        registeritem("slowness_rune_tier_2", SLOWNESS_RUNE_TIER_2);
        registeritem("slowness_rune_tier_3", SLOWNESS_RUNE_TIER_3);
        registeritem("slowness_rune_tier_4", SLOWNESS_RUNE_TIER_4);
        registeritem("slowness_rune_tier_5", SLOWNESS_RUNE_TIER_5);
        registeritem("wither_rune_tier_1", WITHER_RUNE_TIER_1);
        registeritem("wither_rune_tier_2", WITHER_RUNE_TIER_2);
        registeritem("wither_rune_tier_3", WITHER_RUNE_TIER_3);
        registeritem("wither_rune_tier_4", WITHER_RUNE_TIER_4);
        registeritem("wither_rune_tier_5", WITHER_RUNE_TIER_5);
        registeritem("weakness_rune_tier_1", WEAKNESS_RUNE_TIER_1);
        registeritem("weakness_rune_tier_2", WEAKNESS_RUNE_TIER_2);
        registeritem("weakness_rune_tier_3", WEAKNESS_RUNE_TIER_3);
        registeritem("weakness_rune_tier_4", WEAKNESS_RUNE_TIER_4);
        registeritem("weakness_rune_tier_5", WEAKNESS_RUNE_TIER_5);
        registeritem("poison_rune_tier_1", POISON_RUNE_TIER_1);
        registeritem("poison_rune_tier_2", POISON_RUNE_TIER_2);
        registeritem("poison_rune_tier_3", POISON_RUNE_TIER_3);
        registeritem("poison_rune_tier_4", POISON_RUNE_TIER_4);
        registeritem("poison_rune_tier_5", POISON_RUNE_TIER_5);
        registeritem("nausea_rune_tier_1", NAUSEA_RUNE_TIER_1);
        registeritem("nausea_rune_tier_2", NAUSEA_RUNE_TIER_2);
        registeritem("nausea_rune_tier_3", NAUSEA_RUNE_TIER_3);
        registeritem("nausea_rune_tier_4", NAUSEA_RUNE_TIER_4);
        registeritem("nausea_rune_tier_5", NAUSEA_RUNE_TIER_5);
        registeritem("mining_fatigue_rune_tier_1", MINING_FATIGUE_RUNE_TIER_1);
        registeritem("mining_fatigue_rune_tier_2", MINING_FATIGUE_RUNE_TIER_2);
        registeritem("mining_fatigue_rune_tier_3", MINING_FATIGUE_RUNE_TIER_3);
        registeritem("mining_fatigue_rune_tier_4", MINING_FATIGUE_RUNE_TIER_4);
        registeritem("mining_fatigue_rune_tier_5", MINING_FATIGUE_RUNE_TIER_5);
        registeritem("hunger_rune_tier_1", HUNGER_RUNE_TIER_1);
        registeritem("hunger_rune_tier_2", HUNGER_RUNE_TIER_2);
        registeritem("hunger_rune_tier_3", HUNGER_RUNE_TIER_3);
        registeritem("hunger_rune_tier_4", HUNGER_RUNE_TIER_4);
        registeritem("hunger_rune_tier_5", HUNGER_RUNE_TIER_5);
        registeritem("glowing_rune_tier_1", GLOWING_RUNE_TIER_1);
        registeritem("glowing_rune_tier_2", GLOWING_RUNE_TIER_2);
        registeritem("glowing_rune_tier_3", GLOWING_RUNE_TIER_3);
        registeritem("glowing_rune_tier_4", GLOWING_RUNE_TIER_4);
        registeritem("glowing_rune_tier_5", GLOWING_RUNE_TIER_5);
        registeritem("blindness_rune_tier_1", BLINDNESS_RUNE_TIER_1);
        registeritem("blindness_rune_tier_2", BLINDNESS_RUNE_TIER_2);
        registeritem("blindness_rune_tier_3", BLINDNESS_RUNE_TIER_3);
        registeritem("blindness_rune_tier_4", BLINDNESS_RUNE_TIER_4);
        registeritem("blindness_rune_tier_5", BLINDNESS_RUNE_TIER_5);
        registeritem("bad_omen_rune_tier_1", BAD_OMEN_RUNE_TIER_1);
        registeritem("bad_omen_rune_tier_2", BAD_OMEN_RUNE_TIER_2);
        registeritem("bad_omen_rune_tier_3", BAD_OMEN_RUNE_TIER_3);
        registeritem("bad_omen_rune_tier_4", BAD_OMEN_RUNE_TIER_4);
        registeritem("bad_omen_rune_tier_5", BAD_OMEN_RUNE_TIER_5);
        registeritem("nether_portal_rune", NETHER_PORTAL_RUNE);
        registeritem("end_portal_rune", END_PORTAL_RUNE);
        registeritem("absorption_rune", ABSORPTION_RUNE);
        registeritem("home_rune", HOME_RUNE);
        registeritem("crystal_rune", CRYSTAL_RUNE);
        registeritem("sponge_rune", SPONGE_RUNE);
        registeritem("concrete_rune", CONCRETE_RUNE);
        registeritem("rocket_rune_tier_1", ROCKET_RUNE_TIER_1);
        registeritem("rocket_rune_tier_2", ROCKET_RUNE_TIER_2);
        registeritem("rocket_rune_tier_3", ROCKET_RUNE_TIER_3);

        registeritem("multidimensional_rune", MULTIDIMENSIONAL_RUNE);
        registeritem("inventory_rune", INVENTORY_RUNE);
        registeritem("legacy_combat_rune", LEGACY_COMBAT_RUNE);
        registeritem("scaffold_rune", SCAFFOLD_RUNE);
        registeritem("crafting_rune", CRAFTING_RUNE);
        registeritem("ender_chest_rune", ENDER_CHEST_RUNE);
        registeritem("grindstone_rune", GRINDSTONE_RUNE);
        registeritem("loom_rune", LOOM_RUNE);
        registeritem("stonecutter_rune", STONECUTTER_RUNE);
        registeritem("enchanting_rune", ENCHANTING_RUNE);
        registeritem("smithing_rune", SMITHING_RUNE);
        registeritem("spawnpoint_rune", SPAWNPOINT_RUNE);
        registeritem("spawn_rune", SPAWN_RUNE);
        registeritem("phase_rune", PHASE_RUNE);
        registeritem("teleportation_rune", TELEPORTATION_RUNE);
    }

    public static <T extends Item> T registeritem(String item, T entry) {
        return Registry.register(Registry.ITEM, new Identifier(SanixExpansions.MODID, item), entry);
    }
}
